#+CAPTION: vector perfomance
| vector implementation | cost       |
|-----------------------+------------|
| C (homebrew)          | 86         |
| C++ (GCC STL)         | 104 (120%) |
| Rust                  | 238 (276%) |

#+CAPTION: keyword determination
| algorithm                   | cost      |
|-----------------------------+-----------|
| pattern match against &[u8] | 16        |
| hashSet lookup              | 45 (281%) |

#+CAPTION: Rust encoding footprint
| encoding | cost      |
|----------+-----------|
| ASCII    | 43        |
| UTF-8    | 68 (148%) |

#+CAPTION: C wchar foorprint
| encoding | cost       |
|----------+------------|
| ASCII    | 264        |
| Wchar    | 352 (133%) |

#+CAPTION: char class determination
| method             | cost       | commentary                                             |
|--------------------+------------+--------------------------------------------------------|
| direct fn call     | 19         |                                                        |
| indirect fn call   | 20 (105%)  | Rust docs says that the compiler tries to inline those |
| &str linear search | 52 (273%)  |                                                        |

#+CAPTION: parse_float
| method              | cost       | commentary                    |
|---------------------+------------+-------------------------------|
| parse<i64> x2 + pow | 61         | supports only \d+\.\d+ format |
| stdlib/parse<f64>   | 118 (193%) | supports MANY formats         |

#+CAPTION: ast transformating
| method                                    | cost      |
|-------------------------------------------+-----------|
| many small allocations and concatenations | 60        |
| computed length + single allocation       | 64 (106%) |

#+CAPTION: rng lexer
| method                         | cost |
|--------------------------------+------|
| pass rng by ref (usize, usize) |   24 |
| pass rng by ref (u32, u32)     |   24 |
| pass rng copy (usize, usize)   |   24 |
| pass rng copy (u32, u32)       |   24 |

