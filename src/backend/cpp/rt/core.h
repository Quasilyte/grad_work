#pragma once

#include <stdint.h>

typedef int64_t Int_;
typedef double Real_;

// Everything below is not a "core" and will should be generated by backend
// instead of being predefined here

typedef struct Num_ Num_;
struct Num_ {
  int is_int;

  union {
    Int_ int_datum;
    Real_ real_datum;
  };
};

inline Int_ real_to_int_(Real_ x) { return (Int_)x; }

inline Real_ int_to_real_(Int_ x) { return (Real_)x; }

inline Int_ num_to_int_(Num_ x) {
  return x.is_int ? x.int_datum : (Int_)x.real_datum;
}

inline Real_ num_to_real_(Num_ x) {
  return x.is_int ? (Real_)x.int_datum : x.real_datum;
}

inline Num_ int_to_num_(Int_ x) {
  return Num_{.is_int = 1, .int_datum = x};
}

inline Num_ real_to_num_(Real_ x) {
  return Num_{.is_int = 0, .real_datum = x};
}
